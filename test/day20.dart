import 'dart:convert';

import 'package:collection/collection.dart';
import 'package:test/test.dart';

const mapEquality = MapEquality<int, Map<int, TileValue>>(
    values: MapEquality<int, TileValue>());
const listEquality = ListEquality<int>();

enum TileValue { empty, busy, monster }

String valueToString(TileValue value) =>
    {TileValue.empty: '.', TileValue.busy: '#', TileValue.monster: 'O'}[value]!;

final monsterTile = Tile.parse(monster);

class Tile {
  final pixels = <int, Map<int, TileValue>>{};
  final int id;
  final bool flipped;
  final int rotated;
  final int tileWidth;
  final int tileHeight;
  Tile(this.id,
      {this.flipped = false,
      this.rotated = 0,
      this.tileWidth = 10,
      this.tileHeight = 10});

  TileValue getPixel(int x, int y) =>
      pixels.putIfAbsent(x, () => <int, TileValue>{})[y] ?? TileValue.empty;

  void setPixel(int x, int y, {TileValue value = TileValue.busy}) {
    pixels.putIfAbsent(x, () => <int, TileValue>{})[y] = value;
  }

  static Tile parse(String input) {
    var lines = LineSplitter.split(input).toList();
    var id = int.parse(_headerPattern.firstMatch(lines.first)!.group(1)!);
    var result =
        Tile(id, tileHeight: lines.length - 1, tileWidth: lines[1].length);
    lines = lines.sublist(1);
    for (var y = 0; y < lines.length; y++) {
      var line = lines[y];
      for (var x = 0; x < line.length; x++) {
        if (line[x] == '#') {
          result.setPixel(x, y);
        }
      }
    }
    return result;
  }

  Tile rotate(int times) {
    if (times == 0) {
      return this;
    }
    var result = Tile(id,
        rotated: (rotated + 1) % 4,
        flipped: flipped,
        tileWidth: tileHeight,
        tileHeight: tileWidth);
    for (var x = 0; x < tileWidth; x++) {
      for (var y = 0; y < tileHeight; y++) {
        result.setPixel(tileHeight - y - 1, x, value: getPixel(x, y));
      }
    }
    return result.rotate(times - 1);
  }

  Tile flip(bool flip) {
    if (!flip) {
      return this;
    }
    var result = Tile(id, rotated: rotated, flipped: !flipped);
    for (var x = 0; x < tileWidth; x++) {
      for (var y = 0; y < tileHeight; y++) {
        result.setPixel(tileWidth - x - 1, y, value: getPixel(x, y));
      }
    }
    return result;
  }

  int get leftId {
    var result = 0;
    for (var y = 0; y < tileHeight; y++) {
      if (getPixel(0, y) != TileValue.empty) {
        result |= 1 << y;
      }
    }
    return result;
  }

  int get rightId {
    var result = 0;
    for (var y = 0; y < tileHeight; y++) {
      if (getPixel(tileWidth - 1, y) != TileValue.empty) {
        result |= 1 << y;
      }
    }
    return result;
  }

  int get topId {
    var result = 0;
    for (var x = 0; x < tileWidth; x++) {
      if (getPixel(x, 0) != TileValue.empty) {
        result |= 1 << x;
      }
    }
    return result;
  }

  int get bottomId {
    var result = 0;
    for (var x = 0; x < tileWidth; x++) {
      if (getPixel(x, tileHeight - 1) != TileValue.empty) {
        result |= 1 << x;
      }
    }
    return result;
  }

  int get hashCode => listEquality
      .hash([id, rotated, flipped ? 1 : 0, mapEquality.hash(pixels)]);
  bool operator ==(Object other) {
    if (other is Tile) {
      return other.id == id &&
          other.rotated == rotated &&
          other.flipped == flipped &&
          mapEquality.equals(pixels, other.pixels);
    }
    return false;
  }

  @override
  String toString() => '$id (rotated: $rotated, flipped: $flipped)';

  String render() {
    var lines = <String>[];
    for (var y = 0; y < tileHeight; y++) {
      var line = StringBuffer();
      for (var x = 0; x < tileWidth; x++) {
        line.write(valueToString(getPixel(x, y)));
      }
      lines.add(line.toString());
    }
    return lines.join('\n');
  }

  int markMonsters() {
    var result = 0;
    for (var mx = 0; mx < tileWidth - monsterTile.tileWidth; mx++) {
      for (var my = 0; my < tileHeight - monsterTile.tileHeight; my++) {
        if (containsMonster(mx, my)) {
          result++;
          colorMonster(mx, my);
        }
      }
    }
    return result;
  }

  bool containsMonster(int x0, int y0) {
    for (var x = 0; x < monsterTile.tileWidth; x++) {
      for (var y = 0; y < monsterTile.tileWidth; y++) {
        if (monsterTile.getPixel(x, y) != TileValue.busy) {
          continue;
        }
        if (getPixel(x0 + x, y0 + y) != TileValue.busy) {
          return false;
        }
      }
    }
    return true;
  }

  void colorMonster(int x0, int y0) {
    for (var x = 0; x < monsterTile.tileWidth; x++) {
      for (var y = 0; y < monsterTile.tileWidth; y++) {
        if (monsterTile.getPixel(x, y) != TileValue.busy) {
          continue;
        }
        setPixel(x0 + x, y0 + y, value: TileValue.monster);
      }
    }
  }
}

class Puzzle {
  final int puzzleSize;
  final int tileSize;

  Puzzle(this.puzzleSize, this.tileSize);
  final pieces = <int, Map<int, Tile>>{};

  void put(Tile tile, int x, int y) {
    pieces.putIfAbsent(x, () => <int, Tile>{})[y] = tile;
  }

  Tile? getTile(int x, int y) => pieces.putIfAbsent(x, () => <int, Tile>{})[y];

  void remove(int x, int y) {
    pieces.putIfAbsent(x, () => <int, Tile>{}).remove(y);
  }

  String render() {
    var lines = <String>[];
    print(getTile(2, 2));
    for (var y = 0; y < puzzleSize * tileSize; y++) {
      if (y > 0 && y % tileSize == 0) {
        lines.add('');
      }
      var line = StringBuffer();
      for (var x = 0; x < puzzleSize * tileSize; x++) {
        if (x > 0 && x % tileSize == 0) {
          line.write(' ');
        }
        print('tx: ${x ~/ tileSize}, ty: ${y ~/ tileSize}');
        print('px: ${x % tileSize}, py: ${y % tileSize}');
        line.write(valueToString(getTile(x ~/ tileSize, y ~/ tileSize)!
            .getPixel(x % tileSize, y % tileSize)));
      }
      lines.add(line.toString());
    }
    return lines.join('\n');
  }

  int get part1 =>
      getTile(0, 0)!.id *
      getTile(puzzleSize - 1, puzzleSize - 1)!.id *
      getTile(0, puzzleSize - 1)!.id *
      getTile(puzzleSize - 1, 0)!.id;

  Tile withoutBorders() {
    var result = Tile(0,
        tileWidth: (tileSize - 2) * puzzleSize,
        tileHeight: (tileSize - 2) * puzzleSize);
    for (var pieceX = 0; pieceX < puzzleSize; pieceX++) {
      for (var pieceY = 0; pieceY < puzzleSize; pieceY++) {
        var piece = getTile(pieceX, pieceY)!;
        for (var x = 1; x < tileSize - 1; x++) {
          for (var y = 1; y < tileSize - 1; y++) {
            result.setPixel(pieceX * (tileSize - 2) + x - 1,
                pieceY * (tileSize - 2) + y - 1,
                value: piece.getPixel(x, y));
          }
        }
      }
    }
    return result;
  }
}

/// Assembled tiles.
class Tiles {
  TileSet tileSet;
  final int puzzleSize;
  final int tileSize;

  Tiles(this.tileSet, this.puzzleSize, this.tileSize);

  Puzzle assemble() {
    var result = Puzzle(puzzleSize, tileSize);
    if (place(0, 0, result, <int>{})) {
      return result;
    }
    throw StateError('could not find solution');
  }

  Set<Tile> findCandidates(Puzzle puzzle, int x, int y, Set<int> usedTileIds) {
    var leftConstraint = x == 0 ? null : puzzle.getTile(x - 1, y)!.rightId;
    var topConstraint = y == 0 ? null : puzzle.getTile(x, y - 1)!.bottomId;

    if (leftConstraint == null && topConstraint == null) {
      return tileSet.allTiles;
    }

    if (leftConstraint == null) {
      return (tileSet.byTopId[topConstraint] ?? <Tile>{})
          .where((t) => !usedTileIds.contains(t.id))
          .toSet();
    }

    var candidates = tileSet.byLeftId[leftConstraint] ?? <Tile>{};
    if (topConstraint != null) {
      candidates =
          candidates.intersection(tileSet.byTopId[topConstraint] ?? <Tile>{});
    }
    return candidates.where((t) => !usedTileIds.contains(t.id)).toSet();
  }

  bool place(int x, int y, Puzzle puzzle, Set<int> usedTileIds) {
    var candidates = findCandidates(puzzle, x, y, usedTileIds);
    for (var candidate in candidates) {
      // Try placing candidate.
      puzzle.put(candidate, x, y);
      usedTileIds.add(candidate.id);

      // Place next piece.
      int nextX;
      int nextY;
      if (x == puzzleSize - 1 && y == puzzleSize - 1) {
        // Done.
        return true;
      }

      if (x == puzzleSize - 1) {
        nextX = 0;
        nextY = y + 1;
      } else {
        nextX = x + 1;
        nextY = y;
      }

      if (place(nextX, nextY, puzzle, usedTileIds)) {
        return true;
      }

      // Otherwise, rewind.
      puzzle.remove(x, y);
      usedTileIds.remove(candidate.id);
    }

    return false;
  }
}

class TileSet {
  final tiles = <Tile>[];
  final allTiles = <Tile>{};

  static TileSet parse(String input) =>
      TileSet()..tiles.addAll(input.split('\n\n').map(Tile.parse));

  final byLeftId = <int, Set<Tile>>{};
  final byTopId = <int, Set<Tile>>{};
  void prepare() {
    for (var tile in tiles) {
      for (var angle in [0, 1, 2, 3]) {
        for (var flipped in {true, false}) {
          index(tile.flip(flipped).rotate(angle));
        }
      }
    }
  }

  void index(Tile tile) {
    allTiles.add(tile);
    byLeftId.putIfAbsent(tile.leftId, () => <Tile>{}).add(tile);
    byTopId.putIfAbsent(tile.topId, () => <Tile>{}).add(tile);
  }
}

Puzzle part1(String input, {int puzzleSize = 12, int tileSize = 10}) {
  var tileSet = TileSet.parse(input)..prepare();
  var tiles = Tiles(tileSet, puzzleSize, tileSize);
  var puzzle = tiles.assemble();
  return puzzle;
}

int part2(String input, {int puzzleSize = 12, int tileSize = 10}) {
  var puzzle = part1(input, puzzleSize: puzzleSize, tileSize: tileSize);
  var tile = puzzle.withoutBorders();
  for (var rotate in [0, 1, 2, 3]) {
    for (var flip in [true, false]) {
      var t = tile.rotate(rotate).flip(flip);
      if (t.markMonsters() > 0) {
        print(t.render());
        return t.pixels.values
            .expand((c) => c.values)
            .where((v) => v == TileValue.busy)
            .length;
      }
    }
  }
  throw StateError('no monsters');
}

void main() {
  test('parse', () {
    var tiles = TileSet.parse(input);
    expect(tiles.tiles.length, 144);
    expect(tiles.tiles.last.id, 1549);
  });

  test('monster', () {
    expect(monsterTile.tileWidth, 20);
    expect(monsterTile.tileHeight, 3);
  });

  test('smaller sample', () {
    var tileSet = TileSet.parse(smallerSampleInput)..prepare();
    // top left
    var tile1951 =
        tileSet.tiles.firstWhere((t) => t.id == 1951).flip(true).rotate(2);
    // top right
    var tile2311 =
        tileSet.tiles.firstWhere((t) => t.id == 2311).flip(true).rotate(2);
    // bottom left
    var tile2729 =
        tileSet.tiles.firstWhere((t) => t.id == 2729).flip(true).rotate(2);

    // bottom right
    var tile1427 =
        tileSet.tiles.firstWhere((t) => t.id == 1427).flip(true).rotate(2);
    expect(tile1951.rightId, tile2311.leftId);
    expect(tile1951.bottomId, tile2729.topId);
    expect(tile2311.bottomId, tile1427.topId);
    expect(tile2729.rightId, tile1427.leftId);

    var tiles = Tiles(tileSet, 2, 10);
    var puzzle = Puzzle(2, 10);
    puzzle.put(tile1951, 0, 0);
    puzzle.put(tile2311, 1, 0);
    puzzle.put(tile2729, 0, 1);

    expect(
        tiles.findCandidates(puzzle, 1, 1, {1951, 2311, 2729}).single.id, 1427);
  });

  test('sample', () {
    var puzzle = part1(sampleInput, puzzleSize: 3);
    expect(puzzle.part1, 20899048083289);
    expect(part2(sampleInput, puzzleSize: 3), 273);
  });

  test('part1', () {
    print(part1(input).part1);
  });

  test('part2', () {
    print(part2(input));
  });
}

final _headerPattern = RegExp(r'^Tile (\d+):$');

const monster = '''Tile 5555555:
                  # 
#    ##    ##    ###
 #  #  #  #  #  #   ''';
const sampleInput = '''Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...''';

const smallerSampleInput = '''Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.''';

const input = '''Tile 3733:
#.#.#..#.#
...#..#.##
.#...#...#
#.###.....
..##.....#
##......#.
#......#.#
...#....#.
###.##...#
######..##

Tile 3253:
##..#...##
#.....#.#.
....#...##
#........#
.......#.#
##.####...
..#......#
...#......
#.#.....##
###...###.

Tile 2939:
####...###
.#....#..#
....##....
..##......
.#....#...
#.....#...
#.....#...
##........
......#...
##.#.#..#.

Tile 3583:
....#####.
..#...##.#
....#.##..
#.#..#.#..
..#......#
......#...
#...##...#
#..#...#..
...#...##.
..##.###.#

Tile 3761:
#.##.....#
##.......#
..#...#..#
#.#..#.#..
#......#.#
...#...#..
..##.....#
#.#..##...
##.......#
#...#..##.

Tile 1487:
...#....##
#..#....##
#.......#.
.#.#..###.
.......#..
#....#..##
...#..#..#
#......#..
.###....##
##.#...##.

Tile 1279:
..#..##.##
.........#
....#.##.#
....#..#..
##...#..##
#......##.
#.#....###
.#.....###
....##.#..
#.#######.

Tile 1231:
#.........
..#...#...
#...#....#
#..#.##..#
..#....#.#
.##.....#.
#.#....#.#
#..#..#...
#.........
#...##.#.#

Tile 2837:
#.###.#...
#.........
###.#...#.
#.#.#.#..#
.##.......
#.......##
......#..#
###..#....
#...#.....
.#..###...

Tile 1447:
......##.#
.#..#.....
#..##.....
#.........
.......###
..........
..........
#..##....#
....#.....
#.##.####.

Tile 1297:
...#....##
#.......#.
#....##.##
#..#...#.#
##...#.#..
#..#...###
........#.
#.....#..#
.........#
#.##.#....

Tile 3449:
........#.
##..##..##
.#...#.#..
#...#....#
#.....##..
#.......##
#.#.#...##
#...##..#.
##.#####.#
...#..#..#

Tile 1621:
#...####.#
#...#.##..
#........#
.......#.#
#..#...#.#
#....#....
....#..#.#
...##...##
.........#
.#....##.#

Tile 3187:
##..##.#..
##.#..#...
...#..#.##
....#....#
#........#
....#..##.
#........#
#.#...##..
#..#.#..#.
#.#..###.#

Tile 1181:
#..##.#.#.
....#....#
#...#....#
#..#..#..#
###...###.
........##
....#.....
#..#.....#
##...#...#
#.#..#.#..

Tile 3541:
#.###..#..
#..###..##
#...#...#.
#..###....
......#..#
#.........
#.#...#..#
##.......#
..........
..#...##..

Tile 2591:
#...#.###.
.###..##..
#.......##
.........#
#.........
#####....#
#..#....#.
#........#
...#.#..##
.##.......

Tile 2789:
#...#..#..
##....#.##
...#......
..#.#.....
.........#
##...#.#..
.....#.#.#
#...#....#
##....#..#
##..#..#..

Tile 2503:
#.#.#####.
.....#.##.
#.........
#.........
..#..#..##
##....####
.#.....#..
..........
###.......
..#..#..##

Tile 3617:
##..####.#
#..#.##.#.
....##.##.
#..###...#
#.#.#....#
.#.#....##
.....##..#
.......#..
#...#.#..#
.##.#..#.#

Tile 1051:
######...#
#.#..#..##
##....##.#
.......#.#
...#.....#
##.......#
...#......
.#.###...#
.......#.#
.##.###...

Tile 1049:
.#..##..##
#...#.....
...#.#...#
#.........
#.........
..###.....
#.......#.
..........
#......##.
...###.###

Tile 1973:
#.###.##..
....#.####
....#....#
##....#...
..##....##
#..#......
##......#.
#.....#...
..........
########.#

Tile 3169:
.#####.#..
#........#
#..#..#..#
...#....#.
.#........
#.#.##..#.
.#........
..........
#....#....
#......##.

Tile 1217:
###.#.....
#.....#...
..#.##....
.....#...#
#.....#..#
##.#...###
#.#......#
...##.#..#
#....#.#.#
#.#....###

Tile 1327:
#####..###
..##.#.##.
..#......#
#......#..
#..##.#...
.......###
#...##...#
..#....#..
.#.......#
#.....####

Tile 1693:
.##.###.##
#...#.....
...#..#.#.
..#.......
#.........
..#......#
#.##......
...#.#...#
#..#.#...#
.#.###.##.

Tile 1367:
.#...#..#.
...#.#...#
#........#
#........#
..#..##...
.##.......
........#.
#.........
...#....#.
#.#..#...#

Tile 1559:
#.##.#.###
#.###..#..
..#..#.##.
#..#....##
..#.#..#..
##.#....##
#...#.....
#...#..#.#
..#.#.##.#
.###....##

Tile 3727:
.#..####..
....##....
#....#...#
#.###.#...
.........#
#####..#.#
.####.#.#.
..#.....##
#..#..#...
.###.#####

Tile 3491:
.###...###
##.#..##.#
...#...#.#
.##.....#.
.....#.###
.....#...#
#.#.....##
.......#.#
##.....#..
###.##..##

Tile 3547:
#......###
...#....##
.#..#...##
...##.##.#
#....#...#
#.#.......
#..#.#..#.
###.##....
......#...
..#.##.#.#

Tile 2963:
#####..#.#
..#...#...
...##..#..
...#....##
###......#
#.......##
#.....##..
#..#...#.#
.......#.#
#..#.#...#

Tile 2099:
###.#####.
....#.....
........#.
..#..#...#
...#.#.#.#
#.........
##...#...#
.#...###.#
#...#.#..#
.........#

Tile 2879:
#..#.#.##.
##...#..##
.....#...#
#.#.#..#.#
.#.#..#...
........#.
.#..#.#.#.
#..#.....#
#.........
#.#.#.##.#

Tile 1277:
#..#..##.#
#..#...###
.....#..#.
.....#....
...#.##..#
....#....#
....##...#
##.##.....
#......#..
.#.#...###

Tile 3863:
#..#..##.#
#.#.#...##
...###..##
.#.#.....#
..........
.##.......
##.#......
....#....#
##.#.###.#
...#..####

Tile 3623:
....#.###.
#..##.....
.....#.#..
...#...###
##........
#.........
#....#...#
.#...#...#
.........#
..#.#.#.##

Tile 3581:
#....#...#
##.###..##
#...#..#..
..#.##....
.#..#....#
.#.....##.
#.#...##.#
#....#.#.#
...#.....#
..#......#

Tile 1901:
..#.#..###
#.#...#.##
.#........
###.#...#.
.....#....
.#...#..##
#...#....#
##........
...#...###
##.#.####.

Tile 1667:
..#.#.##.#
#.#.......
...#.....#
#..#.....#
........##
#.#.#.....
........#.
#....#.#..
.......##.
#...#.#.#.

Tile 1709:
#..####.#.
.##..#...#
....#....#
......#..#
...#.#....
#......#..
#.#..#..##
...###..##
##......#.
#.#.##..##

Tile 1307:
#..#...#.#
#.#.....##
#.#......#
........##
.....#....
#........#
...##...##
#........#
#...#.#...
#..###....

Tile 1997:
##.......#
#.#......#
.......#..
.....###..
.##.....#.
.#..##...#
.#.#....##
#....###.#
#..###..#.
..###..##.

Tile 3389:
#.#.#.###.
.........#
#.#.#....#
#.........
#.#.......
..#...#..#
#..#......
#.........
#.#....###
.###.#.###

Tile 2729:
##.#...#.#
.....#....
......#.#.
#.......#.
...#...#.#
..#.......
#........#
#........#
....#.#...
.#####....

Tile 2467:
..#.#..###
.##.#.#...
#....#...#
...#.##.##
...###....
#..#.....#
##........
#...#....#
##...#..##
#####.#.#.

Tile 2179:
###.#...#.
#......#..
..#......#
.......##.
..##.#.#.#
....#....#
.........#
#..#.....#
.#..#....#
###.#..##.

Tile 1879:
##.####..#
.......##.
.........#
.#.#.....#
##..##.#..
#........#
.#.#..#.##
#.#.##..#.
##.#.#....
.#...#.##.

Tile 1087:
..###.#.##
....#.....
#......###
........##
.#......#.
#.#....#.#
..........
###......#
#.#...##..
.##.##.#.#

Tile 3331:
#.###....#
.....##..#
....#.#...
#.#.......
#........#
....#.##.#
#...###..#
....##....
#.#.#.#...
....###.##

Tile 1789:
##.#.#.###
##..#..#.#
..##....#.
.#....##..
.....#....
#........#
#.......#.
#........#
#.....##.#
.###.#....

Tile 1949:
####..##..
#....#....
#.#..#....
#.#...#...
..#...#.#.
.#.#......
.#....#.##
#..###...#
#.#..#....
..##.##..#

Tile 2311:
#...##..##
..#.#.....
#.........
#.#.#....#
.#..#....#
..........
....#.....
..#.#...##
#..##....#
###.######

Tile 1091:
###.#.####
#..#.###.#
..........
#........#
##.....#..
.........#
.....#.#.#
###..##...
.......##.
..#...##..

Tile 3593:
##...##..#
.##.#.##.#
#.#..#..##
...#......
.##.#.....
#.#..#.###
#.......#.
........##
.........#
#..#.#....

Tile 2137:
#.#..#...#
.....#....
....#....#
..#.....#.
#....#..##
.#....#.##
........##
.#.#....##
..........
.#.#..#..#

Tile 2251:
##..##.###
##.#......
.#.....###
.....#.#.#
##....####
#.#..##.##
###.....#.
.#....#...
#.........
#..#...#..

Tile 1021:
#..####.#.
##.....#.#
#.##...#..
#....#..##
#........#
..#.......
#.....#...
#........#
..........
..####...#

Tile 2543:
.#..#.###.
#...#.#..#
.#...#....
##..##...#
#.##.#...#
.....#....
..##...###
#.......#.
#.#....#..
..#.#..##.

Tile 2339:
#.#####.##
#...#..#.#
#...#.#...
#........#
#.#.......
....#.#..#
###...#.##
#.........
......#...
..####..#.

Tile 1697:
##...#####
.......##.
#.#..#.###
#.#.......
.#.#....##
#..####..#
##....#..#
####...##.
...#..#...
.###.....#

Tile 3271:
##.#.#.##.
.........#
...#.#....
..#......#
##...#....
#.#.#..###
......###.
#.##...#..
.#.#.#..##
.#...###..

Tile 1801:
##.#.#....
#......#.#
#.#...#...
...###..##
##....#..#
.........#
..##.#..##
#..#....##
#.........
#...#.####

Tile 2389:
#..#....#.
#....###.#
#....#.#..
......#.##
.#.#...#..
.......#.#
.........#
#......##.
.......#.#
..#..#....

Tile 3793:
###.##..#.
#...#...##
#........#
#..#......
....###..#
#.#.#.#..#
#.....##..
##.#......
....##.#..
##.#.###.#

Tile 2213:
.##.#..#..
.....#....
..##..####
#.......#.
#..#.....#
#........#
#...#.#.##
...#.....#
.#........
#....####.

Tile 2593:
..#.#.....
##...#...#
.......#.#
#......###
#.....#...
##....#..#
#........#
#....##..#
....#.....
#####.#...

Tile 1907:
##.###....
#####.....
......#...
#..##.#..#
....#...#.
....#.....
.#.#......
....#....#
......#..#
##..####.#

Tile 3719:
#..##.#..#
#..#.....#
.....##...
......#.#.
##..#....#
#.........
#.....#...
......#...
#...##...#
.#..##.#.#

Tile 3659:
#.#.....##
##.#....#.
#....#...#
#......###
.....###..
.##.#.#..#
.#.#.#...#
.#...#....
...#.#.#.#
##.#.#..##

Tile 1303:
#.##.#..#.
#.#..#.#.#
#...#..#..
#.#....###
........##
..#.#..#..
.....#...#
#.#..#....
...####...
...##..#..

Tile 1607:
######....
..##......
####.#..#.
.####.##.#
.........#
.#.......#
.#.#..#..#
###.##...#
..#..#...#
.##...#.##

Tile 1109:
...#.#...#
........##
#.....#..#
##..##..#.
#.#......#
#.....#..#
#...#....#
.#.......#
.#.#...#.#
#...#####.

Tile 3797:
##...#.#.#
#..#####.#
#####...##
..##......
..........
......#.##
..#..#..#.
#####.##..
##......#.
..##.#.#..

Tile 3923:
...###..##
#..##.....
#.#......#
.##.##....
#..#..#..#
####....#.
#........#
...#......
..##...#.#
####......

Tile 2609:
##..###...
#.........
###..#...#
#.##..#.#.
#...#..#..
#.#....##.
#.#...##.#
###....#.#
..#....#.#
....#.##.#

Tile 3391:
....######
#...#..#..
...#.#...#
#...#..#..
#..##....#
.#..#....#
#.#......#
.......#.#
.....#....
###.#...#.

Tile 1423:
###....#.#
..#.......
##...##...
..........
#.#.###.##
..#....###
.#......##
#.#..#.#..
#....##.#.
....##...#

Tile 2399:
..#...#..#
..#.#...#.
##.....##.
#......#..
....#....#
#........#
#......#.#
...#......
.......#..
##...#.###

Tile 1741:
...#..##..
...#.....#
#.#..#...#
..##...#..
#........#
#....#.#.#
#..##....#
.#........
.###...#.#
....###.#.

Tile 2887:
#.#.#.#.##
.#......#.
#.#..#...#
#........#
......#.##
..#.#....#
#....#....
#....#.#..
###...#...
####...##.

Tile 2351:
..####.#..
....#....#
#.#.#...##
.........#
#.#...##..
#..#.#..#.
#.........
##......#.
#........#
#...#....#

Tile 1061:
.#..###.##
......##..
###......#
#.#...#...
.....#.###
#.........
#....#....
..........
#.##.....#
#####.#..#

Tile 1009:
..#..##.#.
.....#...#
#......#.#
..#.......
.#..##...#
#...#.#..#
..#.......
#.....#..#
....#.###.
..##..#.##

Tile 3821:
.##..##.#.
...#...#.#
#.##..#..#
...#.#...#
.....#...#
.....##.#.
....#....#
#.....##.#
#..#......
.....#...#

Tile 3011:
.#.##.#..#
.....#....
......##.#
..##.##..#
....##....
#..#.#...#
..#......#
##....#...
##.......#
#.####.###

Tile 2833:
.#.##....#
.......#..
#.##.##..#
..#.#....#
#.#....#..
##.#......
..........
.#...#...#
##.#.....#
######.#..

Tile 1409:
..#......#
..#.#..###
#.#..#...#
#...#..#.#
#.....#..#
.##..#..##
..#......#
......#...
#......#.#
##..#.#..#

Tile 3527:
........##
.........#
........#.
...#..##.#
......##..
###.#..#.#
...#....#.
#.......##
..........
.#....###.

Tile 3461:
#.#.#.###.
#.#......#
##.......#
#..#.##...
..##......
...#....##
#....#....
..#.....##
#...#...##
#.#..##.##

Tile 2663:
..###.##.#
#.##.....#
.##.#...#.
.#.....#.#
#.#..###.#
....##.#.#
.........#
#.##.#.#.#
.........#
#.###..#.#

Tile 1511:
.####.#.##
.....#.###
#...#....#
...##....#
..#.#.....
..#...#..#
..........
#...##...#
.#....#...
#...#.###.

Tile 2801:
####.##..#
....##...#
#........#
##..#..#..
.....#...#
....#.....
......#..#
#......##.
.........#
#..#####..

Tile 2381:
....####..
..#.......
...#..#..#
#..#......
#..#....#.
#.........
#.........
#...#.#..#
..####...#
#....#.#.#

Tile 1583:
#...##.###
#.#...##.#
#.......#.
...##....#
#...#..#..
##.......#
......#..#
#..#...#.#
.##.#....#
##....#.##

Tile 1123:
#...#...#.
#..#..#...
.#.......#
#....#.###
#.#...##..
.#.....#.#
.##.#..#..
..........
.##.#..#.#
#.#####.##

Tile 2797:
#..#..#...
....#.#.##
......#.##
#......##.
#.......##
...#.....#
..##.....#
.#.#.#...#
##....#...
..#.#.##.#

Tile 3889:
#.#.####.#
.#..#.##..
.....##..#
##........
#..#.....#
#........#
..#.....#.
#.#.#....#
.....##..#
##.##.#..#

Tile 2557:
###.#....#
##...#....
...##.#...
...#.....#
..........
#........#
.#...#....
.....#....
..........
#...##.#..

Tile 1747:
#..##...##
.....#.#..
.#.##.####
##.......#
###...#..#
###.....#.
#..#.....#
#.#.......
....###...
###.#.##..

Tile 3023:
##..##...#
#....#...#
#.#......#
...#...#.#
..#.#.#..#
#.......#.
.......#.#
..........
...#....##
#...#...##

Tile 1579:
###..##..#
##....#..#
..#..#..#.
##.#....##
#......#.#
.##......#
#.#.#....#
#...#..#..
#....#..##
.#..#####.

Tile 3881:
.###.###..
#..#......
...#......
.#..#...##
#.#.#....#
...#....##
#..#......
......##.#
#..#......
#.###..###

Tile 3313:
.#.#...###
....##...#
#.##.##.#.
.#..#....#
#...##....
#...###...
#.........
...###....
#....#....
##.###...#

Tile 3947:
.#.#..####
.........#
....#.#...
###..#...#
#...##..#.
##....##..
#.#.......
##....#..#
..#.#.....
#.#.######

Tile 1381:
.#...#..#.
.##..#.#.#
##..#.....
#.......#.
.........#
........#.
#....#....
#.....#.##
#..#...#..
#...##.#.#

Tile 1319:
..#...#.#.
.###.#...#
...#..#..#
####..#..#
#..#.###..
###...#.##
..#.#.#..#
#.##.#....
#.......##
.#...###.#

Tile 2011:
###...##..
##......##
##...#...#
......#.#.
#....#....
.#..#....#
#....#..##
.#.#.##..#
.#.#......
##.###.#..

Tile 3163:
.##.#..###
#........#
.##......#
.###.###..
..#.....##
##...#...#
#...##...#
#.......##
.#.....#..
...##..##.

Tile 2441:
####.##.#.
#.....#..#
.#..#..#..
.##...#.#.
..#..#.#.#
..#..#..##
#.#....###
##........
#...###..#
#...######

Tile 2111:
.##.###..#
.........#
....#...##
#.#......#
#..#..####
....#...#.
.#...#.#.#
#.........
....#..#..
.#.....###

Tile 3931:
####......
###......#
...##...#.
#...###.#.
#....#....
...##.##.#
#.#......#
#.........
....##....
.....##.##

Tile 3697:
.#.#.##.##
.....#...#
#.........
##.......#
#........#
#....##...
#.#.....#.
.......#..
##...#....
####.##.#.

Tile 3709:
.##.#.###.
##..##....
.#....#...
##..##..##
.#........
..###.....
#...#..#..
.........#
......##.#
...##.##.#

Tile 1619:
.###..#.#.
#....##...
..##.##.##
.....#....
...#......
#.....#...
.###......
..##...###
#..#.....#
##..#####.

Tile 1777:
..########
#....#.#..
..##..###.
#.....#.#.
..#......#
#..#..#...
#.......##
#.##..#...
##...#.#.#
#..##.....

Tile 2081:
...#.##...
#.#.##..##
##....##.#
#...##...#
##........
##..#.....
#...##....
#....#....
.#..#....#
##.#.#....

Tile 3229:
#...###.##
#.#.##...#
.....##..#
#..#......
#....#.#.#
..........
........##
.#....#..#
###.#...#.
.###...#.#

Tile 3767:
#..#...###
.#.#....#.
#......#.#
.........#
#...##..##
#......###
.....#...#
.#.......#
#.#......#
##.##.#.##

Tile 3257:
.#.#.###.#
#.#.##....
#.........
.##......#
..#....##.
......#.#.
#......#.#
.........#
##...##..#
.#####...#

Tile 3559:
###..#..#.
####......
..##......
#.#......#
##....#..#
#..#..##.#
#.......#.
#........#
....#....#
.#.###...#

Tile 1427:
##..######
#....#.#.#
..###..#.#
.#..#...##
.....#...#
...#..#.#.
##......#.
.......#..
..#...##.#
##..#.#..#

Tile 3853:
##.##..###
.#..#...#.
##.##.....
.....#..##
#........#
#..#....##
#.#....#.#
......##..
##..#.....
..#..##.#.

Tile 3323:
..##.#...#
.#.....#..
##...##...
....#...#.
#.#.##....
##........
#.....#..#
.##....##.
.#.......#
.#####..#.

Tile 1163:
###..#.#.#
#..#..#...
#..##...##
#.#...#.#.
#...#....#
#.#..#....
......#...
#....#.#..
#....#.##.
.#.......#

Tile 1877:
#####...#.
.....#...#
#.#...#...
#...#.#...
.........#
....#...##
..#..#....
#.##.....#
.#........
####..#..#

Tile 1571:
.#.......#
..........
#......#.#
..#..#....
..#...#..#
.......#.#
##......##
....##.#.#
##...##.##
.#.#.....#

Tile 1093:
###...#..#
#.#..####.
..#.....#.
##.#.#....
#.....#..#
#.##......
.####.....
#.#.......
#.##...#.#
...##..##.

Tile 2741:
#....#.###
.......#.#
......#..#
#.....#...
.#....#..#
.....#.#.#
##.#...#..
........#.
#.....##..
#.#..#.#.#

Tile 2861:
........#.
.##.#....#
..#..#....
...#..#..#
....#.#..#
#....#...#
#..###....
#...####..
#.......#.
#...#.##.#

Tile 3191:
##..#.##..
##.#....#.
#.#..##.##
#.##...###
.......#.#
#.#......#
.#...#..#.
#......#.#
##.##....#
#.#####..#

Tile 3319:
...#.#...#
#.#.......
#..#.##..#
.##.#....#
......#...
#......#..
.#..#.....
........##
..#..#..##
#....####.

Tile 3299:
##....#..#
#..#......
.#.####.#.
....##....
.#.##.....
#..#.##...
##......#.
#.........
#.......##
.#.#....##

Tile 3413:
.#.....###
#...#....#
#........#
..#..#..#.
.##..#..#.
#.....#...
.##.#.##..
#####.#.##
..#..#####
.#.#..###.

Tile 2767:
##.#.###.#
..........
.....##..#
#....#....
...#...#..
#...##...#
.......##.
.....#.#.#
....#....#
#..#.#.##.

Tile 2677:
#.##....##
#..##....#
.......##.
#...##..#.
.........#
.....#.#.#
......#..#
..##.....#
#.#.....##
#..#..#.#.

Tile 1489:
##.#.#.##.
.#...##.##
.#..#..#..
.....##..#
#.##...#.#
..#.#....#
.##...##..
##........
#.........
##.####.#.

Tile 1657:
#....#..##
.#...#.#..
#.#.......
#.....#...
.#..##.#.#
#..#..#...
##..#.##.#
.##.#..#.#
......#...
#.#......#

Tile 1483:
#.###...#.
#.........
#..###...#
#..#..###.
#..##..###
#.###.....
.##.....##
#...#.#..#
#...#.....
##..#...#.

Tile 2897:
#..#....#.
.......###
#.........
.##..#....
##...#...#
...#..#...
....#.....
#....#...#
#.#.##..##
####....##

Tile 2113:
###...#.##
#........#
.##..#.#.#
#..#......
.#.......#
....#....#
#####...##
#...#.#...
....#..##.
.##...#..#

Tile 3301:
##.#..#..#
#.#..#....
.#.#..##..
.........#
..#.....##
#.........
..........
#.#.#..#.#
####....#.
.##.#.####

Tile 1549:
.#.#...##.
.........#
.#.#...#..
##........
#.#....#..
...#..#.#.
#.......##
#.....#...
##......##
#.#.#.#.##
''';
